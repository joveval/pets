buildscript {
    ext {
        springBootVersion = '1.4.1.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE"
        classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.9"
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.0.3"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'

jar {
    baseName = 'petapp-service'
    version = '1.0.0'
}

sourceSets {
    intTest {
        java.srcDir file('src/intTest/java')
        resources.srcDir file('src/intTest/resources')
    }
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

findbugs {
    sourceSets = [sourceSets.main, sourceSets.test]
}

pmd {
    ruleSetFiles = files('config/pmd/pmd.xml')
    ignoreFailures = true
    sourceSets = [sourceSets.main,sourceSets.test]
}

checkstyle {
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
}

dependencies {
    compile "org.springframework.cloud:spring-cloud-starter-hystrix"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.springframework:spring-web"
    compile "biz.paluch.logging:logstash-gelf:1.10.0"
    compile "postgresql:postgresql:9.1-901-1.jdbc4"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.apache.httpcomponents:httpclient:4.3.6"
    compile "net.sf.json-lib:json-lib:2.4:jdk15"
    compile(group: 'net.sf.dozer', name: 'dozer', version: '5.4.0') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'log4j', module: 'log4j'
    }

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "io.rest-assured:rest-assured:3.0.0"

    intTestCompile sourceSets.main.output
    intTestCompile configurations.testCompile
    intTestCompile sourceSets.test.output
    intTestRuntime configurations.testRuntime
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR5"
    }
}

task intTest(type: Test) {
    description 'It runs the integration tests.'
    testClassesDir = sourceSets.intTest.output.classesDir
    classpath = sourceSets.intTest.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

flyway {
    url = "jdbc:postgresql://profile_db:5432/brainy_profile"
    user = System.getenv('BRAINY_PROFILE_DB_USER')
    password = System.getenv('BRAINY_PROFILE_DB_PASSWORD')
}

// Mutation testing configuration
pitest {
    targetClasses = ['com.petapp.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
}
group 'com.petbuddy.petapp'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}
